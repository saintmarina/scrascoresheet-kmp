// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AnalyticsConnector
@_exported import AnalyticsConnector
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public class AnalyticsEvent : ObjectiveC.NSObject {
  @objc final public let eventType: Swift.String
  @objc final public let eventProperties: Foundation.NSDictionary?
  @objc final public let userProperties: Foundation.NSDictionary?
  @objc public init(eventType: Swift.String, eventProperties: Foundation.NSDictionary?, userProperties: Foundation.NSDictionary?)
  @objc override dynamic public func isEqual(_ object: Any?) -> Swift.Bool
  @objc deinit
}
@objc public protocol EventBridge {
  @objc func setEventReceiver(_ eventReceiver: @escaping (AnalyticsEvent) -> ())
  @objc func logEvent(event: AnalyticsEvent)
}
@_hasMissingDesignatedInitializers @objc public class AnalyticsConnector : ObjectiveC.NSObject {
  @objc public static func getInstance(_ instanceName: Swift.String) -> AnalyticsConnector
  @objc final public let eventBridge: any EventBridge
  @objc final public let identityStore: any IdentityStore
  @objc deinit
}
@objc public class Identity : ObjectiveC.NSObject {
  @objc final public let userId: Swift.String?
  @objc final public let deviceId: Swift.String?
  @objc final public let userProperties: Foundation.NSDictionary
  @objc public init(userId: Swift.String? = nil, deviceId: Swift.String? = nil, userProperties: Foundation.NSDictionary? = nil)
  @objc override dynamic public func isEqual(_ object: Any?) -> Swift.Bool
  @objc deinit
}
@objc public protocol IdentityStore {
  @objc func getIdentity() -> Identity
  @objc func setIdentity(_ identity: Identity)
  @objc func editIdentity() -> any IdentityStoreEditor
  @objc func addIdentityListener(key: Swift.String, _ listener: @escaping (Identity) -> ())
  @objc func removeIdentityListener(key: Swift.String)
}
@objc public protocol IdentityStoreEditor {
  @objc func setUserId(_ userId: Swift.String?) -> any IdentityStoreEditor
  @objc func setDeviceId(_ deviceId: Swift.String?) -> any IdentityStoreEditor
  @objc func setUserProperties(_ userProperties: Foundation.NSDictionary) -> any IdentityStoreEditor
  @objc func updateUserProperties(_ userPropertyActions: Foundation.NSDictionary) -> any IdentityStoreEditor
  @objc func commit()
}
