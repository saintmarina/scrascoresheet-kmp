#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
#ifndef AMPLITUDESWIFT_SWIFT_H
#define AMPLITUDESWIFT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AmplitudeCore;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AmplitudeSwift",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

typedef SWIFT_ENUM_NAMED(NSInteger, AMPLogLevel, "LogLevelEnum", open) {
  AMPLogLevelOFF = 0,
  AMPLogLevelERROR = 1,
  AMPLogLevelWARN = 2,
  AMPLogLevelLOG = 3,
  AMPLogLevelDEBUG = 4,
};

@class AMPConfiguration;
@class AMPStorage;
@class AMPBaseEvent;
@class NSString;
@class AMPEventOptions;
@class AMPIdentify;
@class AMPRevenue;
@class AMPPlugin;
@class NSDate;
SWIFT_CLASS_NAMED("ObjCAmplitude")
@interface Amplitude : NSObject
+ (Amplitude * _Nonnull)initWithConfiguration:(AMPConfiguration * _Nonnull)configuration SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithConfiguration:(AMPConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) AMPConfiguration * _Nonnull configuration;
@property (nonatomic, readonly, strong) AMPStorage * _Nonnull storage;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event callback:(void (^ _Nullable)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull))callback;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event options:(AMPEventOptions * _Nullable)options callback:(void (^ _Nullable)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull))callback;
- (Amplitude * _Nonnull)track:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
- (Amplitude * _Nonnull)track:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)identify:(AMPIdentify * _Nonnull)identify;
- (Amplitude * _Nonnull)identify:(AMPIdentify * _Nonnull)identify options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)groupIdentify:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName identify:(AMPIdentify * _Nonnull)identify;
- (Amplitude * _Nonnull)groupIdentify:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName identify:(AMPIdentify * _Nonnull)identify options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupNames:(NSArray<NSString *> * _Nonnull)groupNames;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupNames:(NSArray<NSString *> * _Nonnull)groupNames options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)revenue:(AMPRevenue * _Nonnull)revenue;
- (Amplitude * _Nonnull)revenue:(AMPRevenue * _Nonnull)revenue options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)add:(id _Nonnull)plugin;
- (Amplitude * _Nonnull)remove:(AMPPlugin * _Nonnull)plugin;
- (Amplitude * _Nonnull)flush;
- (Amplitude * _Nonnull)setUserId:(NSString * _Nullable)userId;
- (Amplitude * _Nonnull)setDeviceId:(NSString * _Nullable)deviceId;
- (NSString * _Nullable)getUserId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDeviceId SWIFT_WARN_UNUSED_RESULT;
- (int64_t)getSessionId SWIFT_WARN_UNUSED_RESULT;
- (Amplitude * _Nonnull)setSessionIdWithTimestamp:(int64_t)timestamp;
- (Amplitude * _Nonnull)setSessionIdWithDate:(NSDate * _Nonnull)date;
- (Amplitude * _Nonnull)reset;
@property (nonatomic) BOOL optOut;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCAutocaptureOptions")
@interface AMPAutocaptureOptions : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOptionsToUnion:(NSArray<AMPAutocaptureOptions *> * _Nonnull)optionsToUnion;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull sessions;)
+ (AMPAutocaptureOptions * _Nonnull)sessions SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull appLifecycles;)
+ (AMPAutocaptureOptions * _Nonnull)appLifecycles SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull screenViews;)
+ (AMPAutocaptureOptions * _Nonnull)screenViews SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull elementInteractions;)
+ (AMPAutocaptureOptions * _Nonnull)elementInteractions SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull networkTracking;)
+ (AMPAutocaptureOptions * _Nonnull)networkTracking SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull frustrationInteractions;)
+ (AMPAutocaptureOptions * _Nonnull)frustrationInteractions SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull all;)
+ (AMPAutocaptureOptions * _Nonnull)all SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) AMPAutocaptureOptions * _Nonnull default_;)
+ (AMPAutocaptureOptions * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (void)formUnion:(AMPAutocaptureOptions * _Nonnull)other;
- (void)formIntersection:(AMPAutocaptureOptions * _Nonnull)other;
- (void)formSymmetricDifference:(AMPAutocaptureOptions * _Nonnull)other;
- (BOOL)contains:(AMPAutocaptureOptions * _Nonnull)option SWIFT_WARN_UNUSED_RESULT;
- (AMPAutocaptureOptions * _Nonnull)union:(AMPAutocaptureOptions * _Nonnull)option SWIFT_WARN_UNUSED_RESULT;
- (AMPAutocaptureOptions * _Nonnull)intersect:(AMPAutocaptureOptions * _Nonnull)option SWIFT_WARN_UNUSED_RESULT;
@end

@class AMPPlan;
@class AMPIngestionMetadata;
@class AMPProperties;
SWIFT_CLASS_NAMED("ObjCEventOptions")
@interface AMPEventOptions : NSObject
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable deviceId;
@property (nonatomic) int64_t timestamp;
@property (nonatomic) int64_t eventId;
@property (nonatomic) int64_t sessionId;
@property (nonatomic, copy) NSString * _Nullable insertId;
@property (nonatomic) double locationLat;
@property (nonatomic) double locationLng;
@property (nonatomic, copy) NSString * _Nullable appVersion;
@property (nonatomic, copy) NSString * _Nullable versionName;
@property (nonatomic, copy) NSString * _Nullable platform;
@property (nonatomic, copy) NSString * _Nullable osName;
@property (nonatomic, copy) NSString * _Nullable osVersion;
@property (nonatomic, copy) NSString * _Nullable deviceBrand;
@property (nonatomic, copy) NSString * _Nullable deviceManufacturer;
@property (nonatomic, copy) NSString * _Nullable deviceModel;
@property (nonatomic, copy) NSString * _Nullable carrier;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable region;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable dma;
@property (nonatomic, copy) NSString * _Nullable idfa;
@property (nonatomic, copy) NSString * _Nullable idfv;
@property (nonatomic, copy) NSString * _Nullable adid;
@property (nonatomic, copy) NSString * _Nullable language;
@property (nonatomic, copy) NSString * _Nullable library;
@property (nonatomic, copy) NSString * _Nullable ip;
@property (nonatomic, strong) AMPPlan * _Nullable plan;
@property (nonatomic, strong) AMPIngestionMetadata * _Nullable ingestionMetadata;
@property (nonatomic) double revenue;
@property (nonatomic) double price;
@property (nonatomic) NSInteger quantity;
@property (nonatomic, copy) NSString * _Nullable productId;
@property (nonatomic, copy) NSString * _Nullable revenueType;
@property (nonatomic, copy) NSString * _Nullable currency;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull extra;
@property (nonatomic, copy) void (^ _Nullable callback)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull);
@property (nonatomic, copy) NSString * _Nullable partnerId;
- (void)mergeEventOptions:(AMPEventOptions * _Nonnull)other;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCBaseEvent")
@interface AMPBaseEvent : AMPEventOptions
+ (AMPBaseEvent * _Nonnull)initWithEventType:(NSString * _Nonnull)eventType SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPBaseEvent * _Nonnull)initWithEventType:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithEventType:(NSString * _Nonnull)eventType;
- (nonnull instancetype)initWithEventType:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
@property (nonatomic, readonly, copy) NSString * _Nonnull eventType;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull eventProperties;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull userProperties;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull groups;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull groupProperties;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCCaptureRule")
@interface AMPNetworkTrackingCaptureRule : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull hosts;
@property (nonatomic, copy) NSString * _Nonnull statusCodeRange;
- (nonnull instancetype)initWithHosts:(NSArray<NSString *> * _Nonnull)hosts statusCodeRange:(NSString * _Nonnull)statusCodeRange;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AMPTrackingOptions;
@class AMPDefaultTrackingOptions;
@class NSNumber;
@class AMPNetworkTrackingOptions;
@class AMPInteractionsOptions;
SWIFT_CLASS_NAMED("ObjCConfiguration")
@interface AMPConfiguration : NSObject
+ (AMPConfiguration * _Nonnull)initWithApiKey:(NSString * _Nonnull)apiKey SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPConfiguration * _Nonnull)initWithApiKey:(NSString * _Nonnull)apiKey instanceName:(NSString * _Nonnull)instanceName SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey;
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey instanceName:(NSString * _Nonnull)instanceName;
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey instanceName:(NSString * _Nonnull)instanceName enableAutocaptureRemoteConfig:(BOOL)enableAutoCaptureRemoteConfig;
@property (nonatomic, readonly, copy) NSString * _Nonnull apiKey;
@property (nonatomic) NSInteger flushQueueSize;
@property (nonatomic) NSInteger flushIntervalMillis;
@property (nonatomic, readonly, copy) NSString * _Nonnull instanceName;
@property (nonatomic) BOOL optOut;
@property (nonatomic) enum AMPLogLevel logLevel;
@property (nonatomic, copy) void (^ _Nullable loggerProvider)(NSInteger, NSString * _Nonnull);
@property (nonatomic) NSInteger minIdLength;
@property (nonatomic, copy) void (^ _Nullable callback)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull);
@property (nonatomic, copy) NSString * _Nullable partnerId;
@property (nonatomic) NSInteger flushMaxRetries;
@property (nonatomic) BOOL useBatch;
@property (nonatomic) enum AMPServerZone serverZone;
@property (nonatomic, copy) NSString * _Nullable serverUrl;
@property (nonatomic, strong) AMPPlan * _Nullable plan;
@property (nonatomic, strong) AMPIngestionMetadata * _Nullable ingestionMetadata;
@property (nonatomic) BOOL enableCoppaControl;
@property (nonatomic, strong) AMPTrackingOptions * _Nonnull trackingOptions;
@property (nonatomic) BOOL flushEventsOnClose;
@property (nonatomic) NSInteger minTimeBetweenSessionsMillis;
@property (nonatomic, strong) AMPDefaultTrackingOptions * _Nonnull defaultTracking SWIFT_DEPRECATED_MSG("Please use `autocapture` instead.", "autocapture");
@property (nonatomic, strong) AMPAutocaptureOptions * _Nonnull autocapture;
@property (nonatomic) NSInteger identifyBatchIntervalMillis;
@property (nonatomic) BOOL migrateLegacyData;
@property (nonatomic, strong) NSNumber * _Nullable offline;
@property (nonatomic, strong) AMPNetworkTrackingOptions * _Nonnull networkTrackingOptions;
@property (nonatomic, strong) AMPInteractionsOptions * _Nonnull interactionsOptions;
@property (nonatomic, readonly) BOOL enableAutoCaptureRemoteConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCDeadClickOptions")
@interface AMPDeadClickOptions : NSObject
- (nonnull instancetype)initWithEnabled:(BOOL)enabled;
@property (nonatomic, readonly) BOOL enabled;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSUserActivity;
SWIFT_CLASS_NAMED("ObjCDeepLinkOpenedEvent")
@interface AMPDeepLinkOpenedEvent : AMPBaseEvent
+ (AMPDeepLinkOpenedEvent * _Nonnull)initWithActivity:(NSUserActivity * _Nonnull)activity SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPDeepLinkOpenedEvent * _Nonnull)initWithUrl:(NSString * _Nullable)url SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPDeepLinkOpenedEvent * _Nonnull)initWithUrl:(NSString * _Nullable)url referrer:(NSString * _Nullable)referrer SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithActivity:(NSUserActivity * _Nonnull)activity;
- (nonnull instancetype)initWihUrl:(NSString * _Nullable)url;
- (nonnull instancetype)initWihUrl:(NSString * _Nullable)url referrer:(NSString * _Nullable)referrer;
@end

SWIFT_CLASS_NAMED("ObjCDefaultTrackingOptions") SWIFT_DEPRECATED_MSG("Please use `AMPAutocaptureOptions` instead", "AMPAutocaptureOptions")
@interface AMPDefaultTrackingOptions : NSObject
- (nonnull instancetype)init;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPDefaultTrackingOptions * _Nonnull ALL;)
+ (AMPDefaultTrackingOptions * _Nonnull)ALL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPDefaultTrackingOptions * _Nonnull NONE;)
+ (AMPDefaultTrackingOptions * _Nonnull)NONE SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL sessions;
@property (nonatomic) BOOL appLifecycles;
@property (nonatomic) BOOL screenViews;
@end

SWIFT_CLASS_NAMED("ObjCIdentify")
@interface AMPIdentify : NSObject
- (AMPIdentify * _Nonnull)set:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)setOnce:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)prepend:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)append:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)postInsert:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)preInsert:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)remove:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueInt:(NSInteger)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueInt64:(int64_t)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueDouble:(double)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueFloat:(float)value;
- (AMPIdentify * _Nonnull)unset:(NSString * _Nonnull)property;
- (AMPIdentify * _Nonnull)clearAll;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCIngestionMetadata")
@interface AMPIngestionMetadata : NSObject
- (nonnull instancetype)init;
@property (nonatomic, copy) NSString * _Nullable sourceName;
@property (nonatomic, copy) NSString * _Nullable sourceVersion;
@end

@class AMPRageClickOptions;
SWIFT_CLASS_NAMED("ObjCInteractionsOptions")
@interface AMPInteractionsOptions : NSObject
- (nonnull instancetype)initWithRageClick:(AMPRageClickOptions * _Nonnull)rageClick deadClick:(AMPDeadClickOptions * _Nonnull)deadClick;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCNetworkConnectivityCheckerPlugin")
@interface AMPNetworkConnectivityCheckerPlugin : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSNumber * _Nullable Disabled;)
+ (NSNumber * _Nullable)Disabled SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCNetworkTrackingOptions")
@interface AMPNetworkTrackingOptions : NSObject
- (nonnull instancetype)initWithCaptureRules:(NSArray<AMPNetworkTrackingCaptureRule *> * _Nonnull)captureRules ignoreHosts:(NSArray<NSString *> * _Nonnull)ignoreHosts ignoreAmplitudeRequests:(BOOL)ignoreAmplitudeRequests;
@property (nonatomic, copy) NSArray<AMPNetworkTrackingCaptureRule *> * _Nonnull captureRules;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull ignoreHosts;
@property (nonatomic) BOOL ignoreAmplitudeRequests;
+ (AMPNetworkTrackingOptions * _Nonnull)defaultOptions SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCPlan")
@interface AMPPlan : NSObject
- (nonnull instancetype)init;
@property (nonatomic, copy) NSString * _Nullable branch;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable version;
@property (nonatomic, copy) NSString * _Nullable versionId;
@end

enum AMPPluginType : NSInteger;
SWIFT_CLASS_NAMED("ObjCPlugin")
@interface AMPPlugin : NSObject
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCProperties")
@interface AMPProperties : NSObject
- (id _Nullable)get:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (AMPProperties * _Nonnull)set:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (AMPProperties * _Nonnull)remove:(NSString * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCRageClickOptions")
@interface AMPRageClickOptions : NSObject
- (nonnull instancetype)initWithEnabled:(BOOL)enabled;
@property (nonatomic, readonly) BOOL enabled;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCRevenue")
@interface AMPRevenue : NSObject
@property (nonatomic, copy) NSString * _Nullable productId;
@property (nonatomic) NSInteger quantity;
@property (nonatomic) double price;
@property (nonatomic) double revenue;
@property (nonatomic, copy) NSString * _Nullable revenueType;
@property (nonatomic, copy) NSString * _Nullable currency;
@property (nonatomic, copy) NSString * _Nullable receipt;
@property (nonatomic, copy) NSString * _Nullable receiptSig;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull properties;
- (AMPRevenue * _Nonnull)setReceipt:(NSString * _Nonnull)receipt receiptSignature:(NSString * _Nonnull)receiptSignature;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCScreenViewedEvent")
@interface AMPScreenViewedEvent : AMPBaseEvent
+ (AMPScreenViewedEvent * _Nonnull)initWithScreenName:(NSString * _Nonnull)screenName SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithScreenName:(NSString * _Nonnull)screenName;
@end

SWIFT_CLASS_NAMED("ObjCStorage")
@interface AMPStorage : NSObject
- (NSArray<NSString *> * _Nonnull)getEventsStrings SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getInterceptedIdentifiesStrings SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCTrackingOptions")
@interface AMPTrackingOptions : NSObject
- (nonnull instancetype)init;
- (BOOL)shouldTrackVersionName SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackVersionName;
- (BOOL)shouldTrackOsName SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackOsName;
- (BOOL)shouldTrackOsVersion SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackOsVersion;
- (BOOL)shouldTrackDeviceManufacturer SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackDeviceManufacturer;
- (BOOL)shouldTrackDeviceModel SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackDeviceModel;
- (BOOL)shouldTrackCarrier SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackCarrier;
- (BOOL)shouldTrackIpAddress SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackIpAddress;
- (BOOL)shouldTrackCountry SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackCountry;
- (BOOL)shouldTrackCity SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackCity;
- (BOOL)shouldTrackDMA SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackDMA;
- (BOOL)shouldTrackIDFV SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackIDFV;
- (BOOL)shouldTrackLanguage SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackLanguage;
- (BOOL)shouldTrackRegion SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackRegion;
- (BOOL)shouldTrackPlatform SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackPlatform;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, AMPPluginType, "PluginType", open) {
  AMPPluginTypeBefore = 0,
  AMPPluginTypeEnrichment = 1,
  AMPPluginTypeDestination = 2,
  AMPPluginTypeUtility = 3,
  AMPPluginTypeObserve = 4,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
#ifndef AMPLITUDESWIFT_SWIFT_H
#define AMPLITUDESWIFT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AmplitudeCore;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AmplitudeSwift",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

typedef SWIFT_ENUM_NAMED(NSInteger, AMPLogLevel, "LogLevelEnum", open) {
  AMPLogLevelOFF = 0,
  AMPLogLevelERROR = 1,
  AMPLogLevelWARN = 2,
  AMPLogLevelLOG = 3,
  AMPLogLevelDEBUG = 4,
};

@class AMPConfiguration;
@class AMPStorage;
@class AMPBaseEvent;
@class NSString;
@class AMPEventOptions;
@class AMPIdentify;
@class AMPRevenue;
@class AMPPlugin;
@class NSDate;
SWIFT_CLASS_NAMED("ObjCAmplitude")
@interface Amplitude : NSObject
+ (Amplitude * _Nonnull)initWithConfiguration:(AMPConfiguration * _Nonnull)configuration SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithConfiguration:(AMPConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) AMPConfiguration * _Nonnull configuration;
@property (nonatomic, readonly, strong) AMPStorage * _Nonnull storage;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event callback:(void (^ _Nullable)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull))callback;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)track:(AMPBaseEvent * _Nonnull)event options:(AMPEventOptions * _Nullable)options callback:(void (^ _Nullable)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull))callback;
- (Amplitude * _Nonnull)track:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
- (Amplitude * _Nonnull)track:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)identify:(AMPIdentify * _Nonnull)identify;
- (Amplitude * _Nonnull)identify:(AMPIdentify * _Nonnull)identify options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)groupIdentify:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName identify:(AMPIdentify * _Nonnull)identify;
- (Amplitude * _Nonnull)groupIdentify:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName identify:(AMPIdentify * _Nonnull)identify options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupName:(NSString * _Nonnull)groupName options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupNames:(NSArray<NSString *> * _Nonnull)groupNames;
- (Amplitude * _Nonnull)setGroup:(NSString * _Nonnull)groupType groupNames:(NSArray<NSString *> * _Nonnull)groupNames options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)revenue:(AMPRevenue * _Nonnull)revenue;
- (Amplitude * _Nonnull)revenue:(AMPRevenue * _Nonnull)revenue options:(AMPEventOptions * _Nullable)options;
- (Amplitude * _Nonnull)add:(id _Nonnull)plugin;
- (Amplitude * _Nonnull)remove:(AMPPlugin * _Nonnull)plugin;
- (Amplitude * _Nonnull)flush;
- (Amplitude * _Nonnull)setUserId:(NSString * _Nullable)userId;
- (Amplitude * _Nonnull)setDeviceId:(NSString * _Nullable)deviceId;
- (NSString * _Nullable)getUserId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDeviceId SWIFT_WARN_UNUSED_RESULT;
- (int64_t)getSessionId SWIFT_WARN_UNUSED_RESULT;
- (Amplitude * _Nonnull)setSessionIdWithTimestamp:(int64_t)timestamp;
- (Amplitude * _Nonnull)setSessionIdWithDate:(NSDate * _Nonnull)date;
- (Amplitude * _Nonnull)reset;
@property (nonatomic) BOOL optOut;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCAutocaptureOptions")
@interface AMPAutocaptureOptions : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithOptionsToUnion:(NSArray<AMPAutocaptureOptions *> * _Nonnull)optionsToUnion;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull sessions;)
+ (AMPAutocaptureOptions * _Nonnull)sessions SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull appLifecycles;)
+ (AMPAutocaptureOptions * _Nonnull)appLifecycles SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull screenViews;)
+ (AMPAutocaptureOptions * _Nonnull)screenViews SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull elementInteractions;)
+ (AMPAutocaptureOptions * _Nonnull)elementInteractions SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull networkTracking;)
+ (AMPAutocaptureOptions * _Nonnull)networkTracking SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull frustrationInteractions;)
+ (AMPAutocaptureOptions * _Nonnull)frustrationInteractions SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPAutocaptureOptions * _Nonnull all;)
+ (AMPAutocaptureOptions * _Nonnull)all SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) AMPAutocaptureOptions * _Nonnull default_;)
+ (AMPAutocaptureOptions * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (void)formUnion:(AMPAutocaptureOptions * _Nonnull)other;
- (void)formIntersection:(AMPAutocaptureOptions * _Nonnull)other;
- (void)formSymmetricDifference:(AMPAutocaptureOptions * _Nonnull)other;
- (BOOL)contains:(AMPAutocaptureOptions * _Nonnull)option SWIFT_WARN_UNUSED_RESULT;
- (AMPAutocaptureOptions * _Nonnull)union:(AMPAutocaptureOptions * _Nonnull)option SWIFT_WARN_UNUSED_RESULT;
- (AMPAutocaptureOptions * _Nonnull)intersect:(AMPAutocaptureOptions * _Nonnull)option SWIFT_WARN_UNUSED_RESULT;
@end

@class AMPPlan;
@class AMPIngestionMetadata;
@class AMPProperties;
SWIFT_CLASS_NAMED("ObjCEventOptions")
@interface AMPEventOptions : NSObject
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable deviceId;
@property (nonatomic) int64_t timestamp;
@property (nonatomic) int64_t eventId;
@property (nonatomic) int64_t sessionId;
@property (nonatomic, copy) NSString * _Nullable insertId;
@property (nonatomic) double locationLat;
@property (nonatomic) double locationLng;
@property (nonatomic, copy) NSString * _Nullable appVersion;
@property (nonatomic, copy) NSString * _Nullable versionName;
@property (nonatomic, copy) NSString * _Nullable platform;
@property (nonatomic, copy) NSString * _Nullable osName;
@property (nonatomic, copy) NSString * _Nullable osVersion;
@property (nonatomic, copy) NSString * _Nullable deviceBrand;
@property (nonatomic, copy) NSString * _Nullable deviceManufacturer;
@property (nonatomic, copy) NSString * _Nullable deviceModel;
@property (nonatomic, copy) NSString * _Nullable carrier;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable region;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable dma;
@property (nonatomic, copy) NSString * _Nullable idfa;
@property (nonatomic, copy) NSString * _Nullable idfv;
@property (nonatomic, copy) NSString * _Nullable adid;
@property (nonatomic, copy) NSString * _Nullable language;
@property (nonatomic, copy) NSString * _Nullable library;
@property (nonatomic, copy) NSString * _Nullable ip;
@property (nonatomic, strong) AMPPlan * _Nullable plan;
@property (nonatomic, strong) AMPIngestionMetadata * _Nullable ingestionMetadata;
@property (nonatomic) double revenue;
@property (nonatomic) double price;
@property (nonatomic) NSInteger quantity;
@property (nonatomic, copy) NSString * _Nullable productId;
@property (nonatomic, copy) NSString * _Nullable revenueType;
@property (nonatomic, copy) NSString * _Nullable currency;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull extra;
@property (nonatomic, copy) void (^ _Nullable callback)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull);
@property (nonatomic, copy) NSString * _Nullable partnerId;
- (void)mergeEventOptions:(AMPEventOptions * _Nonnull)other;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCBaseEvent")
@interface AMPBaseEvent : AMPEventOptions
+ (AMPBaseEvent * _Nonnull)initWithEventType:(NSString * _Nonnull)eventType SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPBaseEvent * _Nonnull)initWithEventType:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithEventType:(NSString * _Nonnull)eventType;
- (nonnull instancetype)initWithEventType:(NSString * _Nonnull)eventType eventProperties:(NSDictionary<NSString *, id> * _Nullable)eventProperties;
@property (nonatomic, readonly, copy) NSString * _Nonnull eventType;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull eventProperties;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull userProperties;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull groups;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull groupProperties;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCCaptureRule")
@interface AMPNetworkTrackingCaptureRule : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull hosts;
@property (nonatomic, copy) NSString * _Nonnull statusCodeRange;
- (nonnull instancetype)initWithHosts:(NSArray<NSString *> * _Nonnull)hosts statusCodeRange:(NSString * _Nonnull)statusCodeRange;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AMPTrackingOptions;
@class AMPDefaultTrackingOptions;
@class NSNumber;
@class AMPNetworkTrackingOptions;
@class AMPInteractionsOptions;
SWIFT_CLASS_NAMED("ObjCConfiguration")
@interface AMPConfiguration : NSObject
+ (AMPConfiguration * _Nonnull)initWithApiKey:(NSString * _Nonnull)apiKey SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPConfiguration * _Nonnull)initWithApiKey:(NSString * _Nonnull)apiKey instanceName:(NSString * _Nonnull)instanceName SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey;
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey instanceName:(NSString * _Nonnull)instanceName;
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey instanceName:(NSString * _Nonnull)instanceName enableAutocaptureRemoteConfig:(BOOL)enableAutoCaptureRemoteConfig;
@property (nonatomic, readonly, copy) NSString * _Nonnull apiKey;
@property (nonatomic) NSInteger flushQueueSize;
@property (nonatomic) NSInteger flushIntervalMillis;
@property (nonatomic, readonly, copy) NSString * _Nonnull instanceName;
@property (nonatomic) BOOL optOut;
@property (nonatomic) enum AMPLogLevel logLevel;
@property (nonatomic, copy) void (^ _Nullable loggerProvider)(NSInteger, NSString * _Nonnull);
@property (nonatomic) NSInteger minIdLength;
@property (nonatomic, copy) void (^ _Nullable callback)(AMPBaseEvent * _Nonnull, NSInteger, NSString * _Nonnull);
@property (nonatomic, copy) NSString * _Nullable partnerId;
@property (nonatomic) NSInteger flushMaxRetries;
@property (nonatomic) BOOL useBatch;
@property (nonatomic) enum AMPServerZone serverZone;
@property (nonatomic, copy) NSString * _Nullable serverUrl;
@property (nonatomic, strong) AMPPlan * _Nullable plan;
@property (nonatomic, strong) AMPIngestionMetadata * _Nullable ingestionMetadata;
@property (nonatomic) BOOL enableCoppaControl;
@property (nonatomic, strong) AMPTrackingOptions * _Nonnull trackingOptions;
@property (nonatomic) BOOL flushEventsOnClose;
@property (nonatomic) NSInteger minTimeBetweenSessionsMillis;
@property (nonatomic, strong) AMPDefaultTrackingOptions * _Nonnull defaultTracking SWIFT_DEPRECATED_MSG("Please use `autocapture` instead.", "autocapture");
@property (nonatomic, strong) AMPAutocaptureOptions * _Nonnull autocapture;
@property (nonatomic) NSInteger identifyBatchIntervalMillis;
@property (nonatomic) BOOL migrateLegacyData;
@property (nonatomic, strong) NSNumber * _Nullable offline;
@property (nonatomic, strong) AMPNetworkTrackingOptions * _Nonnull networkTrackingOptions;
@property (nonatomic, strong) AMPInteractionsOptions * _Nonnull interactionsOptions;
@property (nonatomic, readonly) BOOL enableAutoCaptureRemoteConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCDeadClickOptions")
@interface AMPDeadClickOptions : NSObject
- (nonnull instancetype)initWithEnabled:(BOOL)enabled;
@property (nonatomic, readonly) BOOL enabled;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSUserActivity;
SWIFT_CLASS_NAMED("ObjCDeepLinkOpenedEvent")
@interface AMPDeepLinkOpenedEvent : AMPBaseEvent
+ (AMPDeepLinkOpenedEvent * _Nonnull)initWithActivity:(NSUserActivity * _Nonnull)activity SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPDeepLinkOpenedEvent * _Nonnull)initWithUrl:(NSString * _Nullable)url SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPDeepLinkOpenedEvent * _Nonnull)initWithUrl:(NSString * _Nullable)url referrer:(NSString * _Nullable)referrer SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithActivity:(NSUserActivity * _Nonnull)activity;
- (nonnull instancetype)initWihUrl:(NSString * _Nullable)url;
- (nonnull instancetype)initWihUrl:(NSString * _Nullable)url referrer:(NSString * _Nullable)referrer;
@end

SWIFT_CLASS_NAMED("ObjCDefaultTrackingOptions") SWIFT_DEPRECATED_MSG("Please use `AMPAutocaptureOptions` instead", "AMPAutocaptureOptions")
@interface AMPDefaultTrackingOptions : NSObject
- (nonnull instancetype)init;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPDefaultTrackingOptions * _Nonnull ALL;)
+ (AMPDefaultTrackingOptions * _Nonnull)ALL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AMPDefaultTrackingOptions * _Nonnull NONE;)
+ (AMPDefaultTrackingOptions * _Nonnull)NONE SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL sessions;
@property (nonatomic) BOOL appLifecycles;
@property (nonatomic) BOOL screenViews;
@end

SWIFT_CLASS_NAMED("ObjCIdentify")
@interface AMPIdentify : NSObject
- (AMPIdentify * _Nonnull)set:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)setOnce:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)prepend:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)append:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)postInsert:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)preInsert:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)remove:(NSString * _Nonnull)property value:(id _Nullable)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueInt:(NSInteger)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueInt64:(int64_t)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueDouble:(double)value;
- (AMPIdentify * _Nonnull)add:(NSString * _Nonnull)property valueFloat:(float)value;
- (AMPIdentify * _Nonnull)unset:(NSString * _Nonnull)property;
- (AMPIdentify * _Nonnull)clearAll;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCIngestionMetadata")
@interface AMPIngestionMetadata : NSObject
- (nonnull instancetype)init;
@property (nonatomic, copy) NSString * _Nullable sourceName;
@property (nonatomic, copy) NSString * _Nullable sourceVersion;
@end

@class AMPRageClickOptions;
SWIFT_CLASS_NAMED("ObjCInteractionsOptions")
@interface AMPInteractionsOptions : NSObject
- (nonnull instancetype)initWithRageClick:(AMPRageClickOptions * _Nonnull)rageClick deadClick:(AMPDeadClickOptions * _Nonnull)deadClick;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCNetworkConnectivityCheckerPlugin")
@interface AMPNetworkConnectivityCheckerPlugin : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSNumber * _Nullable Disabled;)
+ (NSNumber * _Nullable)Disabled SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCNetworkTrackingOptions")
@interface AMPNetworkTrackingOptions : NSObject
- (nonnull instancetype)initWithCaptureRules:(NSArray<AMPNetworkTrackingCaptureRule *> * _Nonnull)captureRules ignoreHosts:(NSArray<NSString *> * _Nonnull)ignoreHosts ignoreAmplitudeRequests:(BOOL)ignoreAmplitudeRequests;
@property (nonatomic, copy) NSArray<AMPNetworkTrackingCaptureRule *> * _Nonnull captureRules;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull ignoreHosts;
@property (nonatomic) BOOL ignoreAmplitudeRequests;
+ (AMPNetworkTrackingOptions * _Nonnull)defaultOptions SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCPlan")
@interface AMPPlan : NSObject
- (nonnull instancetype)init;
@property (nonatomic, copy) NSString * _Nullable branch;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable version;
@property (nonatomic, copy) NSString * _Nullable versionId;
@end

enum AMPPluginType : NSInteger;
SWIFT_CLASS_NAMED("ObjCPlugin")
@interface AMPPlugin : NSObject
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (AMPPlugin * _Nonnull)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type setup:(void (^ _Nonnull)(Amplitude * _Nonnull))setup execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithType:(enum AMPPluginType)type execute:(AMPBaseEvent * _Nullable (^ _Nonnull)(AMPBaseEvent * _Nonnull))execute flush:(void (^ _Nonnull)(void))flush OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCProperties")
@interface AMPProperties : NSObject
- (id _Nullable)get:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (AMPProperties * _Nonnull)set:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (AMPProperties * _Nonnull)remove:(NSString * _Nonnull)key;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCRageClickOptions")
@interface AMPRageClickOptions : NSObject
- (nonnull instancetype)initWithEnabled:(BOOL)enabled;
@property (nonatomic, readonly) BOOL enabled;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCRevenue")
@interface AMPRevenue : NSObject
@property (nonatomic, copy) NSString * _Nullable productId;
@property (nonatomic) NSInteger quantity;
@property (nonatomic) double price;
@property (nonatomic) double revenue;
@property (nonatomic, copy) NSString * _Nullable revenueType;
@property (nonatomic, copy) NSString * _Nullable currency;
@property (nonatomic, copy) NSString * _Nullable receipt;
@property (nonatomic, copy) NSString * _Nullable receiptSig;
@property (nonatomic, readonly, strong) AMPProperties * _Nonnull properties;
- (AMPRevenue * _Nonnull)setReceipt:(NSString * _Nonnull)receipt receiptSignature:(NSString * _Nonnull)receiptSignature;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS_NAMED("ObjCScreenViewedEvent")
@interface AMPScreenViewedEvent : AMPBaseEvent
+ (AMPScreenViewedEvent * _Nonnull)initWithScreenName:(NSString * _Nonnull)screenName SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithScreenName:(NSString * _Nonnull)screenName;
@end

SWIFT_CLASS_NAMED("ObjCStorage")
@interface AMPStorage : NSObject
- (NSArray<NSString *> * _Nonnull)getEventsStrings SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getInterceptedIdentifiesStrings SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS_NAMED("ObjCTrackingOptions")
@interface AMPTrackingOptions : NSObject
- (nonnull instancetype)init;
- (BOOL)shouldTrackVersionName SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackVersionName;
- (BOOL)shouldTrackOsName SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackOsName;
- (BOOL)shouldTrackOsVersion SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackOsVersion;
- (BOOL)shouldTrackDeviceManufacturer SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackDeviceManufacturer;
- (BOOL)shouldTrackDeviceModel SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackDeviceModel;
- (BOOL)shouldTrackCarrier SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackCarrier;
- (BOOL)shouldTrackIpAddress SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackIpAddress;
- (BOOL)shouldTrackCountry SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackCountry;
- (BOOL)shouldTrackCity SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackCity;
- (BOOL)shouldTrackDMA SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackDMA;
- (BOOL)shouldTrackIDFV SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackIDFV;
- (BOOL)shouldTrackLanguage SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackLanguage;
- (BOOL)shouldTrackRegion SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackRegion;
- (BOOL)shouldTrackPlatform SWIFT_WARN_UNUSED_RESULT;
- (AMPTrackingOptions * _Nonnull)disableTrackPlatform;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, AMPPluginType, "PluginType", open) {
  AMPPluginTypeBefore = 0,
  AMPPluginTypeEnrichment = 1,
  AMPPluginTypeDestination = 2,
  AMPPluginTypeUtility = 3,
  AMPPluginTypeObserve = 4,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
